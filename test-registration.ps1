# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å SendGrid
# –ó–∞–º–µ–Ω–∏—Ç–µ email –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

param(
    [Parameter(Mandatory=$true)]
    [string]$Email,
    [string]$FirstName = "Test",
    [string]$LastName = "User"
)

Write-Host "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è: $Email" -ForegroundColor Green
Write-Host ""

# 1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
Write-Host "1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é..." -ForegroundColor Yellow
$headers = @{'Content-Type' = 'application/json'}
$body = @{
    email = $Email
    first_name = $FirstName
    last_name = $LastName
} | ConvertTo-Json

try {
    $response = Invoke-WebRequest -Uri 'http://localhost:8000/api/auth/register/' -Method POST -Headers $headers -Body $body
    $responseData = $response.Content | ConvertFrom-Json
    
    Write-Host "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!" -ForegroundColor Green
    Write-Host "üìß Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: $($responseData.email_sent)" -ForegroundColor Cyan
    Write-Host "‚è∞ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: $($responseData.expires_in) —Å–µ–∫—É–Ω–¥" -ForegroundColor Cyan
    
    if ($responseData.otp_code) {
        Write-Host "üîë OTP –∫–æ–¥ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è): $($responseData.otp_code)" -ForegroundColor Yellow
    }
    
    Write-Host ""
    Write-Host "üì¨ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ—é –ø–æ—á—Ç—É $Email –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–∏—Å—å–º–∞ —Å –∫–æ–¥–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è" -ForegroundColor Green
    Write-Host ""
    
    # 2. –ñ–¥–µ–º –≤–≤–æ–¥–∞ OTP –∫–æ–¥–∞
    $otpCode = Read-Host "–í–≤–µ–¥–∏—Ç–µ OTP –∫–æ–¥ –∏–∑ –ø–∏—Å—å–º–∞"
    
    if ($otpCode) {
        Write-Host ""
        Write-Host "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º OTP –∫–æ–¥..." -ForegroundColor Yellow
        
        $verifyBody = @{
            email = $Email
            code = $otpCode
            first_name = $FirstName
            last_name = $LastName
        } | ConvertTo-Json
        
        try {
            $verifyResponse = Invoke-WebRequest -Uri 'http://localhost:8000/api/auth/verify-otp/' -Method POST -Headers $headers -Body $verifyBody
            $verifyData = $verifyResponse.Content | ConvertFrom-Json
            
            Write-Host "‚úÖ OTP –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!" -ForegroundColor Green
            Write-Host "üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: $($verifyData.user.email)" -ForegroundColor Green
            Write-Host "üîê Access Token: $($verifyData.access.Substring(0, 20))..." -ForegroundColor Cyan
            Write-Host ""
            Write-Host "üéä –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!" -ForegroundColor Green
            
        } catch {
            $errorResponse = $_.Exception.Response.GetResponseStream()
            $reader = New-Object System.IO.StreamReader($errorResponse)
            $errorData = $reader.ReadToEnd() | ConvertFrom-Json
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ OTP: $($errorData.error)" -ForegroundColor Red
        }
    } else {
        Write-Host "‚ùå OTP –∫–æ–¥ –Ω–µ –≤–≤–µ–¥–µ–Ω" -ForegroundColor Red
    }
    
} catch {
    $errorResponse = $_.Exception.Response.GetResponseStream()
    $reader = New-Object System.IO.StreamReader($errorResponse)
    $errorData = $reader.ReadToEnd() | ConvertFrom-Json
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: $($errorData.error)" -ForegroundColor Red
    if ($errorData.suggestion) {
        Write-Host "üí° –°–æ–≤–µ—Ç: $($errorData.suggestion)" -ForegroundColor Yellow
    }
}

Write-Host ""
Write-Host "üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ" -ForegroundColor Blue
