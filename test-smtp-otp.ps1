# –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ OTP —á–µ—Ä–µ–∑ SendGrid SMTP Relay
param(
    [Parameter(Mandatory=$false)]
    [string]$Email = "test-otp@example.com"
)

Write-Host "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ OTP —á–µ—Ä–µ–∑ SendGrid SMTP Relay" -ForegroundColor Green
Write-Host "üìß Email: $Email" -ForegroundColor Cyan
Write-Host ""

# –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
$headers = @{
    'Content-Type' = 'application/json'
}

$body = @{
    email = $Email
    first_name = "SMTP"
    last_name = "Test"
} | ConvertTo-Json

Write-Host "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é..." -ForegroundColor Yellow

try {
    $response = Invoke-WebRequest -Uri 'http://localhost:8000/api/auth/register/' -Method POST -Headers $headers -Body $body
    $responseData = $response.Content | ConvertFrom-Json
    
    Write-Host "‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!" -ForegroundColor Green
    Write-Host "üìß Email sent: $($responseData.email_sent)" -ForegroundColor Cyan
    Write-Host "‚è∞ Expires in: $($responseData.expires_in) —Å–µ–∫—É–Ω–¥" -ForegroundColor Cyan
    
    if ($responseData.otp_code) {
        Write-Host "üîë OTP –∫–æ–¥: $($responseData.otp_code)" -ForegroundColor Yellow
    }
    
    if ($responseData.email_error) {
        Write-Host "‚ùå Email –æ—à–∏–±–∫–∞: $($responseData.email_error)" -ForegroundColor Red
    }
    
    Write-Host ""
    Write-Host "üì¨ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É $Email" -ForegroundColor Green
    
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
    
    if ($_.Exception.Response) {
        $errorStream = $_.Exception.Response.GetResponseStream()
        $reader = New-Object System.IO.StreamReader($errorStream)
        $errorContent = $reader.ReadToEnd()
        Write-Host "üìÑ –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: $errorContent" -ForegroundColor Yellow
    }
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
Write-Host ""
Write-Host "üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞:" -ForegroundColor Blue
docker compose logs realty-main-web --tail 5
